@model AdaptItAcademy.BusinessLogic.Models.CourseModel

@{
    ViewBag.Title = "Edit";
}

<h2>Update Course</h2>

@using (Html.BeginForm("Edit", "CourseAction", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class="col-md-6">
                @if (Model != null && !string.IsNullOrEmpty(Model.ErrorMessage))
                {
                <div id="errorMsg" class="alert-danger alert-error">
                    @Html.Raw(Model.ErrorMessage)
                </div>
                }
                @if (Model != null && !string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div id="successMsg" class="alert-info alert-primary">
                        @Model.SuccessMessage
                    </div>
                }
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseDescr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseDescr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseDescr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCoursePaidFor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCoursePaidFor)
                    @Html.ValidationMessageFor(model => model.IsCoursePaidFor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCourseActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCourseActive)
                    @Html.ValidationMessageFor(model => model.IsCourseActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button id="btnCancel" formaction="Courses" class="btn btn-default">Cancel</button>
            </div>
        </div>
    </div>
}
